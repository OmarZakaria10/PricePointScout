apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pricepointscout-ingress
  namespace: pps-namespace
  annotations:
    # Enable real IP forwarding for rate limiting
    nginx.ingress.kubernetes.io/proxy-real-ip-cidr: "0.0.0.0/0"
    nginx.ingress.kubernetes.io/use-forwarded-headers: "true"
    
    # Forward real client IP headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    
    # Optional: NGINX-level rate limiting as backup (uncomment if needed)
    # nginx.ingress.kubernetes.io/rate-limit: "60"
    # nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    # nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    
    # Security headers
    nginx.ingress.kubernetes.io/custom-http-errors: "400,401,403,404,500,502,503,504"
    
    # Body size limit for uploads
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    
    # Timeouts - Increased for scraping operations (up to 2.5 minutes)
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
spec:
  ingressClassName: nginx
  rules:
  - host: 
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pricepointscout-service
            port:
              number: 8080
  # Optional: Add a fallback rule without host for testing
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pricepointscout-service
            port:
              number: 8080