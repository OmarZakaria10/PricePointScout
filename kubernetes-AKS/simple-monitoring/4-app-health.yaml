# Simple health check for your app
# This adds basic health checks to your PricePointScout app

# First, let's add a simple health endpoint to your app
# You need to add this to your Node.js code (app.js or index.js):

# app.get('/health', (req, res) => {
#   res.status(200).json({ status: 'healthy', time: new Date() });
# });

# Then update your deployment with health checks:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pricepointscout
  namespace: pps-namespace
spec:
  selector:
    matchLabels:
      app: pricepointscout
  template:
    metadata:
      labels:
        app: pricepointscout
    spec:
      containers:
      - name: pricepointscout
        image: omarzakaria10/price-point-scout:0f99c4d2e2992da734b5f2c6aa94e401ec1a9355
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "3Gi"
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: pps-configmap
        - secretRef:
            name: pricepointscout-secret
        # Simple health check - checks if your app is running
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60  # Wait 1 minute before first check
          periodSeconds: 30        # Check every 30 seconds
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10  # Check after 10 seconds
          periodSeconds: 10        # Check every 10 seconds
---
apiVersion: v1
kind: Service
metadata:
  name: pricepointscout-service
  namespace: pps-namespace
spec:
  selector:
    app: pricepointscout
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
