# RBAC Configuration for Prometheus
# This allows Prometheus to discover and scrape pods across namespaces

# Service Account for Prometheus
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring
---
# Cluster Role with necessary permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
# Allow reading nodes (for node-exporter discovery)
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  verbs: ["get", "list", "watch"]

# Allow reading pods and services (for service discovery)
- apiGroups: [""]
  resources:
  - pods
  - services
  - endpoints
  verbs: ["get", "list", "watch"]

# Allow reading config maps and secrets (for configuration)
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  verbs: ["get"]

# Allow reading ingresses (for ingress monitoring)
- apiGroups: ["networking.k8s.io"]
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]

# Allow reading deployments and replica sets (for workload monitoring)
- apiGroups: ["apps"]
  resources:
  - deployments
  - replicasets
  - daemonsets
  - statefulsets
  verbs: ["get", "list", "watch"]
---
# Bind the ClusterRole to the ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: monitoring